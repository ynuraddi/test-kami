// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/transport/handler.go

// Package mock_transport is a generated GoMock package.
package mock_transport

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/ynuraddi/test-kami/internal/domain"
)

// MockReservationService is a mock of ReservationService interface.
type MockReservationService struct {
	ctrl     *gomock.Controller
	recorder *MockReservationServiceMockRecorder
}

// MockReservationServiceMockRecorder is the mock recorder for MockReservationService.
type MockReservationServiceMockRecorder struct {
	mock *MockReservationService
}

// NewMockReservationService creates a new mock instance.
func NewMockReservationService(ctrl *gomock.Controller) *MockReservationService {
	mock := &MockReservationService{ctrl: ctrl}
	mock.recorder = &MockReservationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReservationService) EXPECT() *MockReservationServiceMockRecorder {
	return m.recorder
}

// ListByRoom mocks base method.
func (m *MockReservationService) ListByRoom(ctx context.Context, roomID string) ([]domain.Reservation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListByRoom", ctx, roomID)
	ret0, _ := ret[0].([]domain.Reservation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListByRoom indicates an expected call of ListByRoom.
func (mr *MockReservationServiceMockRecorder) ListByRoom(ctx, roomID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListByRoom", reflect.TypeOf((*MockReservationService)(nil).ListByRoom), ctx, roomID)
}

// ReserveRoom mocks base method.
func (m *MockReservationService) ReserveRoom(ctx context.Context, roomID string, from, to time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReserveRoom", ctx, roomID, from, to)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReserveRoom indicates an expected call of ReserveRoom.
func (mr *MockReservationServiceMockRecorder) ReserveRoom(ctx, roomID, from, to interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReserveRoom", reflect.TypeOf((*MockReservationService)(nil).ReserveRoom), ctx, roomID, from, to)
}
